@import '~highlight.js/styles/github-dark.css';

// SCSS変数宣言
$body-padding: max(1em, 2vmax);
$height_header: 4.5em;
$border-radius: 15px;
$bg_body: #000;
$padding: $body-padding;
$shadow: 0 0 .5em rgba(0, 0, 0, 1);
$modal-button_height: 2em;
$accent-color: #C02020;

@media (prefers-color-scheme: dark) {
  $bg_body: #000;
}

/* リセットCSS */
*,
*::before,
*::after {
  font: unset;
  color: unset;
  background: unset;
  padding: unset;
  margin: unset;
  border: unset;
  outline: unset;
  box-sizing: border-box;
}

body {
  max-width: 100vw;
  height: 100svh;
  min-height: 100svh;
  max-height: 100svh;
  overflow: hidden;
  font-size: 14px;
  overscroll-behavior-inline: contain;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  color: #fff;
  background: $bg_body;
}

button {
  background: none;
  border: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

// アクセシビリティリセット
html {
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

:where(button, [type='button'], [type='reset'], [type='submit']) {
  touch-action: manipulation;
}

:where(:any-link, button, [type='button'], [type='reset'], [type='submit'], label[for], select, summary, [role='tab'], [role='button'], [type='checkbox']) {
  cursor: pointer;
}

@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }

    &:focus-visible {
      @content;
    }
  }
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1em;
  width: 100%;
  height: $height_header;
  padding: 0 $body-padding;
  position: fixed;
  top: env(safe-area-inset-top);
  left: 0;
  z-index: 1;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    padding-top: calc($height_header * 2);
    background: linear-gradient(to bottom, $bg_body, transparent);
    pointer-events: none;
    z-index: -1;
  }

  .logo {
    display: flex;
    align-items: center;
    gap: 1em;

    .logo-img {
      box-shadow: $shadow;
    }

    h1 {
      font-size: 1.5em;
      line-height: .75em;
      font-family: "Glegoo", serif;
      font-weight: 700;
      text-shadow: $shadow;

      small {
        font-size: .5em;
        line-height: .5em;
        color: mix(#fff, #000, 45%);
      }
    }
  }

  .free-version {
    font-size: 1.3em;
    color: $accent-color;
    border: 2px solid $accent-color;
    background: rgba(#000, .5);
    padding: 2px 5px;
    border-radius: 4px;
    position: fixed;
    top: calc($height_header / 2 - 1.5em);
    left: calc($body-padding + 13rem);

    @media (max-width: 600px) {
      font-size: .8em;
      top: calc($height_header + 1.5em);
      left: auto;
      right: $body-padding;
      z-index: 10;
    }
  }

  .header-side {
    height: 100%;
    padding: .5rem 0;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: .5em;

    .login {
      background-color: $accent-color;
      color: #ffffff;
      font-weight: bold;
      padding: 0.5em 1em;
      border-radius: 5px;
      border: none;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      transition: background-color 0.3s ease;

      &:hover {
        background-color: darken($accent-color, 10%);
      }

      &:active {
        background-color: darken($accent-color, 20%);
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
      }
    }

    .setting {
      height: 100%;
      aspect-ratio: 1/1;
      display: grid;
      place-items: center;
      cursor: pointer;

      &:hover {
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 50%;
      }
    }
  }
}

.loginButton {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.container {
  padding: 20px;
  max-width: 800px;
  margin: 0 auto;
}

.login-button {
  padding: 10px 20px;
  font-size: 16px;
}

.input-section {
  width: 100%;
  $chat-input-max-width: 50em;
  max-width: $chat-input-max-width;
  padding: 0 $padding;
  // padding-bottom: calc(env(safe-area-inset-bottom) + $body-padding);
  display: flex;
  flex-direction: column;
  gap: .5em;
  overflow: visible;
  font-size: 0.8rem;
  margin: 0 auto;

  .input-container {
    display: flex;
    align-items: flex-end;
    align-items: center;
    gap: 1em;

    .open-modal-button {
      height: $modal-button_height;
      padding: 0 1em;
      color: mix(#fff, #000, 70%);
      background: mix(#fff, #000, 10%);
      display: flex;
      align-items: center;
      gap: .5em;
      border-radius: $border-radius;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      box-shadow: $shadow;

      &::after {
        content: '△';
      }
    }

    .file-upload-button {
      cursor: pointer;
      font-size: 1.5em;
      margin-left: 10px;
    }

    &.model-select-area {
      color: mix(#fff, #000, 70%);
      // display: flex;
      gap: .5em;
      width: 100vw;
      margin: 0 calc(50% - 50vw);
      padding: 0 calc(50vw - 50%);
      overflow-x: auto;
      scrollbar-width: none;
      scrollbar-color: transparent transparent;

      &::-webkit-scrollbar {
        width: 0;
        height: 0;
      }

      &:hover {
        scrollbar-width: thin;
        scrollbar-color: rgba(255, 255, 255, 0.2) transparent;

        &::-webkit-scrollbar {
          height: 6px;
        }

        &::-webkit-scrollbar-track {
          background: transparent;
        }

        &::-webkit-scrollbar-thumb {
          background-color: rgba(255, 255, 255, 0.2);
          border-radius: 3px;
        }
      }

      .model-radio {
        min-width: fit-content;

        label {
          min-width: fit-content;
          display: flex;
          align-items: center;
          padding: .6em;
          background: mix(#fff, #000, 10%);
          border-radius: $border-radius;
          box-shadow: $shadow;
          cursor: pointer;

          &::before {
            content: "";
            display: block;
            min-height: 1.5em;
            aspect-ratio: 1/1;
            border-radius: 50%;
            background: mix(#fff, #000, 20%);
            margin-right: 0.5em;
          }
        }

        input:checked+label {
          &::before {
            content: "✔︎";
            margin-right: 0.5em;
            display: grid;
            place-items: center;
          }
        }

        input {
          display: none;
        }
      }
    }

    &.chat-input-area {
      $maxHeight: calc(100svh - $height_header - $modal-button_height - $body-padding * 3 - env(safe-area-inset-top));
      max-height: $maxHeight;
      max-width: 100%;
      padding: 0 1em;
      padding-right: 0;
      background: mix(#fff, #000, 10%);
      border-radius: $border-radius;
      box-shadow: $shadow;
      font-size: 1rem;

      .chat-input {
        margin: auto;
        padding: 1em 0;
        max-height: calc($maxHeight - 2em);
        resize: none;

        &::placeholder {
          color: mix(#fff, #000, 30%);
        }
      }

      .send-button {
        height: 10vmin;
        max-height: 40px;
        aspect-ratio: 1/1;
        margin: .5em;
        background: mix(#fff, $accent-color, 10%);
        border-radius: calc($border-radius - .25em);
      }
    }
  }

  .action-button,
  .model-radio label {
    height: 2rem;
  }

  .input-actions {
    display: flex;
    gap: 0.5em;

    &.show {
      display: flex;
    }

    .action-button {
      $button-icon-size: 1.2em;
      $button-padding-vertical: 0.5em;
      $button-padding-horizontal: 0.9em;

      padding: $button-padding-vertical $button-padding-horizontal;
      background-color: mix(#fff, #000, 10%);
      color: mix(#fff, #000, 70%);
      border-radius: $border-radius;
      transition: background-color 0.3s, color 0.3s;
      display: flex;
      align-items: center;
      gap: 0.5em;
      white-space: nowrap;
      position: relative;

      &:hover {
        background-color: mix(#fff, #000, 15%);
        color: #fff;
      }

      >svg {
        width: $button-icon-size;
        height: $button-icon-size;
      }

      &.icon-button {
        padding-left: calc($button-icon-size + $button-padding-horizontal * 2 * 0.9);

        >svg {
          position: absolute;
          left: $button-padding-horizontal;
          top: 50%;
          transform: translateY(-50%);
        }
      }

      .shortcut {
        margin-left: .5em;
        opacity: .5;
        display: inline-flex;
        align-items: center;

        svg {
          width: 1.1em;
          aspect-ratio: 1/1;
        }
      }

      &.reset-regenerate-button,
      &.send-button {
        background-color: rgba(0, 255, 0, 0.2);
        border: 1px solid rgba(0, 255, 0, 0.4);
        color: #00ff00;
        display: block;

        &:hover {
          background-color: rgba(0, 255, 0, 0.3);
          border-color: rgba(0, 255, 0, 0.6);
          color: #ffffff;
        }
      }

      &.save-only-button {
        background-color: rgba($accent-color, 0.2);
        border: 1px solid rgba($accent-color, 0.4);
        color: lighten($accent-color, 20%);

        &:hover {
          background-color: rgba($accent-color, 0.3);
          border-color: rgba($accent-color, 0.6);
          color: #ffffff;
        }
      }
    }

  }

  .model-select-area,
  .input-actions {
    display: none;
  }

  &.edited {

    .model-select-area,
    .input-actions {
      display: flex;
    }
  }

  &.focused {

    .model-select-area {
      display: flex;
    }
  }

  .suggestions-list {
    position: absolute;
    bottom: 10em;
    left: 1.5em;
    background: mix(#fff, #000, 10%);
    border-radius: $border-radius;
    box-shadow: $shadow;
    max-height: 10em;
    overflow-y: auto;
    z-index: 2;
    list-style: none;
    padding: 0.5em;
    margin: 0;
    width: calc(100% - 3em);

    li {
      padding: 0.5em;
      cursor: pointer;

      &.active {
        background-color: mix(#fff, #000, 20%);
      }

      input {
        display: none;
      }

      label {
        display: block;
        width: 100%;
        height: 100%;
      }
    }
  }
}

.reset-button {
  position: fixed;
  bottom: calc(env(safe-area-inset-bottom) + 2em);
  right: calc(env(safe-area-inset-right) + 2em);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1em 1.5em;
  background: transparent;
  backdrop-filter: blur(10px);
  color: rgba(255, 255, 255, 0.7);
  border: none;
  border-radius: $border-radius;
  box-shadow: $shadow;
  transition: backdrop-filter 0.3s, color 0.3s;
  overflow: visible;
  gap: 1em;

  &:hover {
    backdrop-filter: blur(15px);
    color: #fff;
  }

  &:active {
    backdrop-filter: blur(20px);
  }

  &.generating {
    background-color: rgba(255, 65, 54, 0.2);
    color: #ff4136;
  }

  &.newThread {
    background-color: rgb(34 135 45 / 20%);
    color: #2ecc40;
  }

  svg {
    width: 1.4em;
    height: 1.4em;
  }

  span {
    white-space: nowrap;
  }
}

.responses-container {
  width: 100vw;
  min-height: 100svh;
  height: 100svh;
  max-height: 100svh;
  padding-top: calc($height_header * 2 + env(safe-area-inset-top));
  overflow-y: auto;
  overscroll-behavior-block: none;
  scroll-behavior: smooth;

  &.initial-screen {
    padding-top: 0;
    display: grid;
    place-items: center;
  }

  .message-block {
    width: 100%;
    padding-bottom: 8rem;

    &:last-of-type {
      display: flex;
      flex-direction: column;
      min-height: calc(100svh - $height_header*1.5);

      .scroll_area {
        // padding-bottom: calc(8em + env(safe-area-inset-bottom)*1.5);
        min-height: fit-content;
        overflow-y: hidden;
      }
    }

    .user {
      padding: 0 $body-padding;

      p {
        white-space: pre-wrap;
        position: relative;
      }

      .reset-regenerate-button-area {
        $button-icon-size: 1.2em;
        $button-padding-vertical: 0.5em;
        $button-padding-horizontal: 0.9em;
        $button-font-size: 0.8em;
        display: flex;

        button {
          font-size: $button-font-size;
          padding: $button-padding-vertical $button-padding-horizontal;
          background-color: mix(#fff, #000, 10%);
          color: mix(#fff, #000, 70%);
          border-radius: $border-radius;
          margin-top: $button-padding-vertical;
          transition: background-color 0.3s, color 0.3s;
          display: none;
          position: relative;

          &:hover {
            background-color: mix(#fff, #000, 15%);
            color: #fff;
          }

          &.reset-regenerate-button {
            margin-right: $button-padding-horizontal;
            border: 1px solid rgba(255, 255, 255, 0.2);

            &:hover {
              background-color: mix(#fff, #000, 20%);
              border-color: rgba(255, 255, 255, 0.4);
            }
          }

          &.saveOnly-button {
            &::before {
              content: "Save Only";
            }
          }

          svg {
            width: $button-icon-size;
            height: $button-icon-size;
            position: absolute;
            left: $button-padding-horizontal;
            top: 50%;
            transform: translateY(-50%);
          }

          &.icon-button {
            padding-left: calc($button-icon-size + $button-padding-horizontal * 2 * 0.9);
          }

          .shortcut {
            display: none;
            margin-left: .5em;
            opacity: .5;
          }
        }
      }

      &.editing {
        p {
          outline: none;
          background-color: rgba(255, 255, 255, .2);
          border-radius: 4px;
          padding: 8px;
        }

        button {
          .shortcut {
            display: inline-block;
          }

          &.reset-regenerate-button {
            display: block;

            &::before {
              content: "All Regenerate";
            }
          }
        }
      }

      &.edited {
        .reset-regenerate-button-area {
          display: flex;

          .reset-regenerate-button {
            background-color: rgba(0, 255, 0, 0.2);
            border: 1px solid rgba(0, 255, 0, 0.4);
            color: #00ff00;
            display: block;

            &:hover {
              background-color: rgba(0, 255, 0, 0.3);
              border-color: rgba(0, 255, 0, 0.6);
              color: #ffffff;
            }

            &::before {
              content: "Yes, All Regenerate";
            }
          }
        }

        .saveOnly-button {
          display: block;
        }
      }
    }
  }

  .scroll_area {
    display: flex;
    align-items: flex-start;
    overflow-x: auto;
    gap: calc($body-padding * .7);
    padding: 1em 2em 2em $body-padding;
    cursor: pointer;

    .response {
      width: calc(100vw - $body-padding);
      min-width: 22em;
      background: rgba(250, 250, 250, .1);
      padding: 1em;
      border-radius: calc($border-radius / 5);
      display: flex;
      flex-direction: column;
      gap: .5em;
      cursor: auto;

      &.reply {
        background-color: rgba(100, 100, 250, 0.1);
      }

      &.mention {
        background-color: rgba(250, 250, 100, 0.1);
      }

      &.unselected {
        color: rgba(#fff, 0.3);
      }

      p {
        white-space: normal;
        word-wrap: break-word;
      }

      .meta {
        font-size: .8em;
        display: flex;
        justify-content: space-between;
        align-items: center;

        .response-controls {
          display: flex;
          align-items: center;
          gap: 0.5em;

          button,
          .response-select {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 2em;
            height: 2em;
            border-radius: 4px;
            background-color: rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;

            &.regenerate-button {
              animation: bounce 0.5s ease-in-out;

              @keyframes bounce {

                0%,
                100% {
                  transform: translateY(0);
                }

                50% {
                  transform: translateY(-5px);
                }
              }
            }

            &:hover {
              background-color: rgba(255, 255, 255, 0.2);
              box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            }

            &:active {
              transform: translateY(0);
              box-shadow: none;
            }

            svg {
              width: 1.2em;
              height: 1.2em;
            }
          }

          .response-select.selected {
            background-color: $accent-color;
            color: white;
            border-color: $accent-color;
          }
        }
      }
    }
  }
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100dvh;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(3px);
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 2em;
  align-items: center;
  transition: opacity .3s;
  pointer-events: none;

  .save {
    font-family: "Glegoo", serif;
    color: mix(#fff, #000, 70%);
  }

  .modal-content {
    pointer-events: auto;
    background: mix(#fff, #000, 10%);
    padding: 2em;
    max-width: 35em;
    width: 100%;
    border-radius: $border-radius;
    cursor: auto;
    display: flex;
    flex-direction: column;
    gap: 1em;

    h2 {
      font-size: 1.5em;
      font-family: "Glegoo", serif;
      font-weight: 700;
    }

    textarea {
      color: mix(#fff, #000, 80%);
      font-size: 16px;
      padding: 1em;
      width: 100%;
      height: 10lh;
      font-family: "JetBrains Mono", monospace;
      font-optical-sizing: auto;
    }
  }
}

.markdown-editor {
  min-height: 5em;
}

// Markdown Styles
.markdown-content {
  $line-height-base: 1.6;
  $color-base: #fff;
  $color-secondary: #666;
  $color-link: #0070f3;
  $color-bg: #686868;
  $color-bg-light: #8f8f8f;
  $color-border: #696969;
  $color-code-bg: #060606;
  $border-radius: 5px;

  $heading-base-size: 1rem;
  $heading-scale: 1.2;
  $heading-margin-top: 1.5rem;
  $heading-margin-bottom: 0.75rem;

  line-height: $line-height-base;

  @for $i from 1 through 6 {
    h#{$i} {
      font-size: $heading-base-size * pow($heading-scale, 6 - $i);
      margin-top: $heading-margin-top;
      margin-bottom: $heading-margin-bottom;
      font-weight: bold;
      line-height: 1.2;
    }
  }

  h1 {
    margin-top: $heading-margin-top * 1.5;
  }

  h2 {
    margin-top: $heading-margin-top * 1.25;
  }

  p {
    margin: 0.25rem 0;
  }

  ul,
  ol {
    margin: 0.5rem 0;
    padding-left: 1.5rem;

    li {
      margin-bottom: 0.25rem;
    }
  }

  blockquote {
    margin: 0.5rem 0;
    padding: 0.25rem 0.5rem;
    border-left: 4px solid #808080;
    background-color: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.8);
  }

  code {
    background-color: $color-code-bg;
    padding: 0.1rem 0.2rem;
    border-radius: 3px;
    font-family: "JetBrains Mono", monospace;
    font-optical-sizing: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  pre {
    background-color: $color-code-bg;
    padding: .1em .3rem;
    border-radius: $border-radius;
    overflow-x: auto;
    font-family: "JetBrains Mono", monospace;
    font-size: .8em;
    line-height: 1.2;
    font-optical-sizing: auto;
    white-space: pre;
    word-wrap: break-word;

    code {
      text-wrap: nowrap;
    }
  }

  a {
    color: $color-link;
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin: 1rem 0;

    th,
    td {
      padding: 0.5rem;
      border: 1px solid $color-border;
    }

    th {
      background-color: $color-bg;
      font-weight: bold;
    }

    td {
      background-color: $color-bg-light;
    }
  }

  hr {
    border: 0;
    border-top: 1px solid $color-border;
    margin: 1rem 0;
  }
}

body {
  .responses-container {
    will-change: transform;
    transition: transform .3s;
  }

  // &[data-input-focused="true"][data-software-keyboard="true"] {
  //   .responses-container {
  //     transform: translateY(calc(var(--keyboardHeight) - $height_header * 1.5));
  //   }

  //   .chat-input-area {
  //     max-height: calc(var(--actual-100dvh) - $modal-button_height - $body-padding*2 - env(safe-area-inset-top)) !important;

  //     .chat-input {
  //       max-height: calc(var(--actual-100dvh) - $modal-button_height - $body-padding*2 - env(safe-area-inset-top) - 2em) !important;
  //     }
  //   }

  //   .input-section {
  //     padding-bottom: $body-padding;
  //   }

  //   .reset-button {
  //     bottom: calc(var(--keyboardHeight) + 1.5em);
  //   }
  // }
}

textarea[fieldSizing="content"] {
  field-sizing: content;
  width: 100%;
  max-height: 100%;
  overflow-y: auto;
  overscroll-behavior-block: none;
}

.login-button {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 1em;
  background: $accent-color;
  border-radius: .5em;
}